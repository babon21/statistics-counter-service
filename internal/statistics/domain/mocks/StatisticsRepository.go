// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	domain "github.com/babon21/statistics-counter-service/internal/statistics/domain"
	mock "github.com/stretchr/testify/mock"

	service "github.com/babon21/statistics-counter-service/internal/statistics/service"
)

// StatisticsRepository is an autogenerated mock type for the StatisticsRepository type
type StatisticsRepository struct {
	mock.Mock
}

// GetStatisticsList provides a mock function with given fields: from, to, sortField, sortOrder
func (_m *StatisticsRepository) GetStatisticsList(from string, to string, sortField service.SortField, sortOrder service.SortOrder) ([]domain.Statistics, error) {
	ret := _m.Called(from, to, sortField, sortOrder)

	var r0 []domain.Statistics
	if rf, ok := ret.Get(0).(func(string, string, service.SortField, service.SortOrder) []domain.Statistics); ok {
		r0 = rf(from, to, sortField, sortOrder)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.Statistics)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string, service.SortField, service.SortOrder) error); ok {
		r1 = rf(from, to, sortField, sortOrder)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ResetStatistics provides a mock function with given fields:
func (_m *StatisticsRepository) ResetStatistics() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SaveStatistics provides a mock function with given fields: statistic
func (_m *StatisticsRepository) SaveStatistics(statistic domain.Statistics) error {
	ret := _m.Called(statistic)

	var r0 error
	if rf, ok := ret.Get(0).(func(domain.Statistics) error); ok {
		r0 = rf(statistic)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
